# This is the main configuration file for the application.
# ~~~~~

# The application languages (English and Welsh)
# If the browser does not have a preferred language set, then it will use the first language on this list
# ~~~~~
application.langs = "en,cy"

prototype.disclaimer = true

# The application context setting is used if the application is to be hosted on a non-root path
# e.g. https://host/vehicle-management. It must begin with a forward slash. It must not end with forward slash.
application.context = "/sell-to-the-trade"

# Page to redirect when you start the application.
start.page = ${?application.context}"/before-you-start"
# Page to redirect after you exit the application.
end.page = ${start.page}

# Logger
# ~~~~~

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

jvm.memory = "-Xms64m -Xmx512m -XX:MaxPermSize=512m"

# Protect cookies from XSS
session.httpOnly = true

application.crypto.aes.transformation = AES/CBC/PKCS5Padding

# Specify which address lookup service to use
#addressLookupService.type = "gds"
addressLookupService.type = "ordnanceSurvey"

csrf.prevention = true

bruteForcePrevention.enabled = true

#googleAnalytics.enabled = true

survey.url = "https://www.snapsurveys.com/wh/s.asp?k=139565145499"
survey.interval = 7 days # 7.days.toMillis

progressBar.enabled = false

html5Validation.enabled = false

# Test configs
# ~~~~~

# Should we be testing local play instance or remote instance
test.remote = false

# if remote instance, the url to use or dev
#test.url = "https://vehicles-online.preview-dvla.co.uk/"
test.url = "https://dev-vehicles-online.preview-dvla.co.uk/"
#test.url = "https://qa-vehicles-online.preview-dvla.co.uk/"
#test.url = "http://localhost:9000"


# The type of browser to use for tests
browser.type = htmlunit
#browser.type = chrome
#webdriver.chrome.driver = "drivers/chromedriver-2.9_macosx"
#webdriver.chrome.driver = "drivers/chromedriver-2.9_linux64"
#browser.type = firefox
#browser.type = ie
#browser.type = safari
#browser.type = phantomjs
#webdriver.phantomjs.binary = "drivers/phantomjs-1.9.7_macosx"
#webdriver.phantomjs.binary = "drivers/phantomjs-1.9.7_linux64"

# Specifies the amount of time in milliseconds the browser should wait when searching
# for an element if it is not immediately present.
browser.implicitlyWait = 5000

openingTime = 0
closingTime = 24

# Amount of time before the service closes to tell the user the service is going to close
closingWarnPeriodMins = 0

# Add the CDN url that serves the assets
#assets.url =

############# Health check satistics configuration #############
# Set that configuration in order to make the healthcheck return response code 500 when there are x consecutive failures per individual microservice
# This statistic doesn't depend on any other. If there are x consecutive failures per individual microservice the healthcheck endpoint will return http code 500
healthStats.numberOfConsecutiveFailures=10

# The next two properties define the request rate threshold used to determine which failure mechanism to be used.
# When the request rate is low we are going to use absolute mesurement (not relative to success requests) of the failures in a time frame.
# When we have high request rate we are using relative to the success count statistic.
healthStats.numberOfRequests = 20
healthStats.numberOfRequestsTimeFrame = 10 minutes

# The absolute number of requests for a time interval after which we should report not healthy application e.g. 1 failures per second.
# These settings will only be used if the request rate is above the one defined with healthStats.numberOfRequests and healthStats.numberOfRequestsTimeFrame
healthStats.failuresRatioPercent = 30
healthStats.failuresRatioPercentTimeFrame = 10 minutes

# The relative number of request for a time interval after which we should report non healthy application e.g. 20% for the last 5 minutes.
# These settings will only be used if the request rate is below the one defined with healthStats.numberOfRequests and healthStats.numberOfRequestsTimeFrame
healthStats.numberOfFailures = 10
healthStats.numberOfFailuresTimeFrame = 10 minutes

# Include file
include "vehiclesOnline.conf"
