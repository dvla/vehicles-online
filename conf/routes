# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# IoC
# For those controllers whose dependencies are being injected, we use the @controllers syntax here so that
# the router knows we are referring to a class (not an object). In turn it will call on the
# GlobalSettings.getControllerInstance method to resolve the actual controller instance. This method hooks into
# Guice to provide the actual instance complete with its injected dependencies

# Map static resources from the /public folder to the /assets URL path
GET         /assets/versioned/*file                        controllers.Assets.versioned(path="/public", file: Asset)

# Map static resources from the /public folder to the /assets URL path
#GET         /assets/*file                                  controllers.Assets.at(path="/public", file)

######################
## DISPOSAL OF VEHICLE
######################

#page 1 - Before You Start (GET request not POST on submission because we are not posting any data)
GET         /                                              @controllers.ApplicationRoot.index
GET         /before-you-start                              @controllers.BeforeYouStart.present
POST        /before-you-start                              @controllers.BeforeYouStart.submit

#page 2 - setup-trade-details
GET         /setup-trade-details                           @controllers.SetUpTradeDetails.present
POST        /setup-trade-details                           @controllers.SetUpTradeDetails.submit

#page 3 - business choose your address
GET         /business-choose-your-address                  @controllers.BusinessChooseYourAddress.present
POST        /business-choose-your-address                  @controllers.BusinessChooseYourAddress.submit

#page 4 [optional] - enter address manually
GET         /enter-address-manually                        @controllers.EnterAddressManually.present
POST        /enter-address-manually                        @controllers.EnterAddressManually.submit

GET         /vehicle-lookup                                @controllers.VehicleLookup.present
POST        /vehicle-lookup                                @controllers.VehicleLookup.submit
GET         /vehicle-lookup/exit                           @controllers.VehicleLookup.exit
GET         /vehicle-lookup-back                           @controllers.VehicleLookup.back

GET         /complete-and-confirm                          @controllers.Dispose.present
POST        /complete-and-confirm                          @controllers.Dispose.submit

GET         /sell-to-the-trade-success                     @controllers.DisposeSuccess.present
POST        /sell-to-the-trade-success/new-disposal        @controllers.DisposeSuccess.newDisposal
POST        /sell-to-the-trade-success/exit                @controllers.DisposeSuccess.exit

GET         /sell-to-the-trade-failure                     @controllers.DisposeFailure.present

GET         /vehicle-lookup-failure                        @controllers.VehicleLookupFailure.present
POST        /vehicle-lookup-failure                        @controllers.VehicleLookupFailure.submit

GET         /uprn-not-found                                @controllers.UprnNotFound.present

GET         /duplicate-sell-to-the-trade-error             @controllers.DuplicateDisposalError.present

GET         /service-error                                 @controllers.MicroServiceError.present
GET         /service-error/try-again                       @controllers.MicroServiceError.back

GET         /vrm-locked                                    @controllers.VrmLocked.present
POST        /vrm-locked/new-disposal                       @controllers.VrmLocked.tryAnother
POST        /vrm-locked/exit                               @controllers.VrmLocked.exit

GET         /error/:exceptionDigest                        @controllers.Error.present(exceptionDigest)
POST        /error/:exceptionDigest                        @controllers.Error.submit(exceptionDigest)

#error page when the user looks up a vehicle and it has a suppressed V5C
GET         /suppressed-v5c                                @controllers.SuppressedV5C.present
GET         /suppressed-v5c/buy-another                    @controllers.SuppressedV5C.sellAnotherVehicle
GET         /suppressed-v5c/finish                         @controllers.SuppressedV5C.finish

# feedback
GET         /feedback                                      @controllers.FeedbackController.present
POST        /feedback                                      @controllers.FeedbackController.submit

GET         /help                                          @controllers.Help.present
GET         /help/back                                     @controllers.Help.back

GET         /with-language/:chosenLanguage                 uk.gov.dvla.vehicles.presentation.common.controllers.AlternateLanguages.withLanguage(chosenLanguage: String)

GET         /healthcheck                                   @uk.gov.dvla.vehicles.presentation.common.controllers.HealthCheck.respond

GET         /healthcheck/debug                             @uk.gov.dvla.vehicles.presentation.common.controllers.HealthCheck.debug

GET         /version                                       @controllers.Version.version

GET         /cookie-policy                                 @controllers.CookiePolicyController.present



##################################    PRIVATE ROUTES      ####################################

#page 2 - setup-trade-details
GET         /private/setup-trade-details                   @controllers.priv.SetUpTradeDetails.present
POST        /private/setup-trade-details                   @controllers.priv.SetUpTradeDetails.submit

#page 3 - business choose your address
GET         /private/business-choose-your-address          @controllers.priv.BusinessChooseYourAddress.present
POST        /private/business-choose-your-address          @controllers.priv.BusinessChooseYourAddress.submit

#page 4 [optional] - enter address manually
GET         /private/enter-address-manually                @controllers.priv.EnterAddressManually.present
POST        /private/enter-address-manually                @controllers.priv.EnterAddressManually.submit

GET         /private/vehicle-lookup                        @controllers.priv.VehicleLookup.present
POST        /private/vehicle-lookup                        @controllers.priv.VehicleLookup.submit
GET         /private/vehicle-lookup/exit                   @controllers.priv.VehicleLookup.exit
GET         /private/vehicle-lookup-back                   @controllers.priv.VehicleLookup.back

GET         /private/complete-and-confirm                  @controllers.priv.Dispose.present
POST        /private/complete-and-confirm                  @controllers.priv.Dispose.submit

GET         /private/sell-to-the-trade-success              @controllers.priv.DisposeSuccess.present
POST        /private/sell-to-the-trade-success/new-disposal @controllers.priv.DisposeSuccess.newDisposal
POST        /private/sell-to-the-trade-success/exit         @controllers.priv.DisposeSuccess.exit

GET         /private/sell-to-the-trade-failure             @controllers.priv.DisposeFailure.present

GET         /private/vehicle-lookup-failure                @controllers.priv.VehicleLookupFailure.present
POST        /private/vehicle-lookup-failure                @controllers.priv.VehicleLookupFailure.submit

GET         /private/uprn-not-found                        @controllers.priv.UprnNotFound.present

GET         /private/duplicate-sell-to-the-trade-er        @controllers.priv.DuplicateDisposalError.present

GET         /private/service-error                         @controllers.priv.MicroServiceError.present
GET         /private/service-error/try-again               @controllers.priv.MicroServiceError.back

GET         /private/vrm-locked                            @controllers.priv.VrmLocked.present
POST        /private/vrm-locked/new-disposal               @controllers.priv.VrmLocked.tryAnother
POST        /private/vrm-locked/exit                       @controllers.priv.VrmLocked.exit

GET         /private/error/:exceptionDigest                @controllers.priv.Error.present(exceptionDigest)
POST        /private/error/:exceptionDigest                @controllers.priv.Error.submit(exceptionDigest)

#error page when the user looks up a vehicle and it has a suppressed V5C
GET         /private/suppressed-v5c                        @controllers.priv.SuppressedV5C.present
GET         /private/suppressed-v5c/buy-another            @controllers.priv.SuppressedV5C.sellAnotherVehicle
GET         /private/suppressed-v5c/finish                 @controllers.priv.SuppressedV5C.finish

# feedback
GET         /private/feedback                              @controllers.priv.FeedbackController.present
POST        /private/feedback                              @controllers.priv.FeedbackController.submit

GET         /private/help                                  @controllers.priv.Help.present
GET         /private/help/back                             @controllers.priv.Help.back
